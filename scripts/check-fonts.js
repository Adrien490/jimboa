#!/usr/bin/env node

/**
 * Script de v√©rification des polices Next.js 15 (2025)
 * V√©rifie que les fichiers Satoshi sont pr√©sents et correctement configur√©s
 */

const fs = require("fs");
const path = require("path");

const FONT_DIR = path.join(process.cwd(), "app", "fonts");
const REQUIRED_FONTS = [
	"Satoshi-SemiBold.woff2", // Titres
	"Satoshi-Bold.woff2", // Titres importants
];

console.log("üî§ V√©rification des polices Jimboa (Next.js 15)");
console.log("üìã Configuration: Satoshi (titres) + Inter (texte)\n");

// V√©rifier l'existence du dossier
if (!fs.existsSync(FONT_DIR)) {
	console.log("‚ùå Dossier app/fonts/ manquant");
	console.log("   Cr√©ez-le avec: mkdir -p app/fonts\n");
	process.exit(1);
}

// V√©rifier chaque police
let allFontsPresent = true;
let totalSize = 0;

REQUIRED_FONTS.forEach((font) => {
	const fontPath = path.join(FONT_DIR, font);
	if (fs.existsSync(fontPath)) {
		const stats = fs.statSync(fontPath);
		const sizeKB = Math.round(stats.size / 1024);
		totalSize += sizeKB;
		console.log(`‚úÖ ${font} (${sizeKB}KB)`);
	} else {
		console.log(`‚ùå ${font} manquant`);
		allFontsPresent = false;
	}
});

console.log(`\nüìä Taille totale: ${totalSize}KB`);

if (allFontsPresent) {
	console.log("\nüéâ Configuration parfaite !");
	console.log("   Toutes les polices Satoshi sont pr√©sentes");
	console.log("   Next.js 15 les optimisera automatiquement");

	if (totalSize > 300) {
		console.log("\n‚ö†Ô∏è  Taille importante d√©tect√©e");
		console.log("   Consid√©rez compresser vos fichiers WOFF2");
	}
} else {
	console.log("\nüì• T√©l√©chargez Satoshi depuis:");
	console.log("   https://www.fontshare.com/fonts/satoshi");
	console.log("   Puis placez les fichiers dans app/fonts/");
}

console.log("\nüîß Configuration actuelle:");
console.log("   ‚úÖ Satoshi (titres) - next/font/local avec preload");
console.log("   ‚úÖ Inter (texte) - next/font/google optimis√©");
console.log("   ‚úÖ font-display: swap");
console.log("   ‚úÖ Fallbacks syst√®me optimis√©s");
